"use client";

import React, { useEffect } from "react";
import { animate, svg, stagger } from "animejs";

// Array to store path data
const pathsData = [
  // Blue Character Paths
  {
    d: "m 2635,2120 c 0,0 410,147.5 550,-80 140,-227.5 -52.5,-550 -150,-700 -97.5,-150 -322.5,-345 -920,-182.5 -597.5,162.5 -857.5,1087.5 -855,1730 2.5,642.5 40,1445 530,1592.5 490,147.5 555,-582.5 555,-582.5 0,0 341.67,249.17 511.67,-134.17 170,-383.33 190,-909.99 -221.67,-1643.33",
    stroke: "#00d4ff",
  },
  {
    d: "m 2055,1640 c 0,0 -92.5,-41.25 -67.5,-113.75 25,-72.5 138.75,-83.75 226.25,-83.75 87.5,0 460,-3.75 483.75,192.5 23.75,196.25 -275,126.25 -275,126.25 0,0 -243.75,-53.75 -367.5,-121.25",
    stroke: "#00d4ff",
  },
  {
    d: "m 1891.25,2005 c 0,0 -112.5,-48.75 -48.75,-136.25 63.75,-87.5 230,-13.75 230,-13.75 0,0 166.25,48.75 155,133.75 -11.25,85 -136.25,106.25 -336.25,16.25",
    stroke: "#00d4ff",
  },
  {
    d: "m 1505,2276.25 c 0,0 108.75,-147.5 472.5,287.5 363.75,435 458.75,677.5 458.75,677.5 0,0 72.5,166.25 78.75,293.75 6.25,127.5 1.25,368.75 -187.5,332.5 -188.75,-36.25 -393.75,-363.75 -393.75,-363.75 0,0 -315,-515 -390,-700 -75,-185 -153.75,-415 -38.75,-527.5",
    stroke: "#00d4ff",
  },
  {
    d: "m 1437.5,3240 c 0,0 73.75,-57.5 222.5,202.5 148.75,260 331.25,703.75 155,758.75 -176.25,55 -352.5,-423.75 -352.5,-423.75 0,0 -160,-457.5 -25,-537.5",
    stroke: "#00d4ff",
  },
  // Pink Character Paths
  {
    d: "m 5418.34,3876.67 c 0,0 -55,636.67 -396.67,746.67 -341.67,110 -508.33,-705.01 -195,-898.34 0,0 -264.99,-75 -273.33,-248.33 -8.34,-173.34 170,-456.67 543.33,-198.34 l 90,91.67 c 0,0 3.33,-166.67 148.33,-323.33 145,-156.67 313.33,-101.67 360,48.33 46.67,150 -13.33,356.67 -33.33,401.67 0,0 443.35,175 426.68,383.33 -16.67,208.34 -241.67,281.66 -676.67,-115 l 6.66,111.67",
    stroke: "#f03d55",
  },
  {
    d: "m 4970,4399.16 c 0,0 -64.17,-10 -82.5,-83.33 -18.33,-73.33 -10.84,-256.66 55.83,-355.83 66.67,-99.17 112.5,-173.33 172.5,-168.33 60,5 85.84,57.5 26.67,247.49 -59.17,190 -50,375 -172.5,360",
    stroke: "#f03d55",
  },
  {
    d: "m 4922.5,3755.83 c 0,0 -5.83,-34.17 75,-52.5 80.83,-18.33 98.33,18.34 97.5,35.84 -0.83,17.5 -19.17,48.33 -94.17,49.16 -75,0.84 -78.33,-32.5 -78.33,-32.5",
    stroke: "#f03d55",
  },
  {
    d: "m 4627.5,3338.33 c 0,0 24.16,-81.66 158.33,-55.83 134.17,25.83 288.34,142.5 249.17,238.33 -39.17,95.84 -254.17,5 -254.17,5 0,0 -197.5,-63.33 -153.33,-187.5",
    stroke: "#f03d55",
  },
  {
    d: "m 5471.65,3519.17 c 0,0 -71.66,0.83 -70.83,-143.34 0.83,-144.16 40.82,-204.16 94.16,-205.83 53.34,-1.67 72.51,90 60.84,185.83 -11.67,95.84 -20,162.5 -84.17,163.34",
    stroke: "#f03d55",
  },
  {
    d: "m 5458.75,3618.75 c 0,0 -2.5,-27.5 37.5,-35 40,-7.5 88.75,-5 80,26.25 -8.75,31.25 -47.5,40 -61.25,40 -13.75,0 -55,-7.5 -56.25,-31.25",
    stroke: "#f03d55",
  },
  {
    d: "m 5583.75,3690 c 0,0 41.25,-63.75 198.75,35 157.5,98.75 103.75,171.25 65,182.5 -38.75,11.25 -130,-28.75 -198.75,-86.25 C 5580,3763.75 5560,3725 5583.75,3690",
    stroke: "#f03d55",
  },
  // Black Detail Paths
  {
    d: "m 1198.33,2305 c 0,0 -68.33,8.33 -93.33,-68.34 -25,-76.67 -41.67,-233.34 65,-251.67 106.67,-18.33 115,181.68 100,238.34 -15,56.66 -38.33,73.34 -71.67,81.67",
    stroke: "#8a7b9d",
  },
  {
    d: "m 1200,2093.33 c 0,0 286.67,-813.33 903.33,-933.33 0,0 -470,246.67 -865,990 L 1200,2093.33",
    stroke: "#8a7b9d",
  },
  {
    d: "m 2036.8,3883.33 c 0,0 -2.08,6.47 -6.91,18.31 -4.78,11.83 -12.11,29.06 -23.03,49.94 -10.94,20.82 -25.56,45.41 -45.85,70.14 -20.41,24.39 -46.83,49.37 -81.29,64.52 -17.04,7.71 -35.88,13.37 -56.04,14.89 -3.01,0.45 -4.92,0.14 -7.14,0.1 -2.18,-0.09 -4.36,-0.1 -6.56,-0.05 -4.73,-0.57 -9.65,-0.84 -14.49,-1.79 -9.7,-2 -19.49,-4.82 -29.15,-9.16 -19.49,-8.06 -38.47,-20.71 -56.6,-35.75 -18.14,-15.07 -35.59,-32.52 -51.83,-51.79 -32.57,-38.54 -60.54,-83.92 -82.57,-132.6 -20.29,-48.91 -32.5,-102.97 -45.08,-155.85 -6.03,-26.6 -10.89,-53.49 -16.39,-80.05 -3.01,-13.22 -4.88,-26.68 -7.37,-39.93 -2.49,-13.25 -4.97,-26.47 -7.45,-39.63 -5.49,-26.21 -8.73,-52.6 -13.09,-78.45 -2.04,-12.95 -4.07,-25.82 -6.09,-38.59 -1.79,-12.8 -2.98,-25.6 -4.48,-38.23 -2.67,-25.09 -6.09,-50.6 -9.13,-73.88 -1.87,-24.64 -4.15,-48.7 -6.58,-72.12 -1.16,-11.7 -2.31,-23.26 -3.44,-34.63 -0.64,-11.24 -1.27,-22.31 -1.9,-33.2 -1.39,-21.8 -2.73,-42.86 -4.02,-63.09 -1,-40.65 -3.03,-78.06 -2.42,-111.17 0.24,-16.55 -0.45,-32.15 0.27,-46.46 0.47,-14.33 0.92,-27.52 1.06,-39.49 1.2,-23.78 2.12,-42.61 3.46,-55.32 0.87,-12.82 1.76,-19.56 1.76,-19.56 l -3.9,-0.88 c 0,0 -2.15,6.62 -5.35,19.15 -3.45,12.53 -7,31.1 -11.83,54.84 -3.89,23.81 -8.87,52.85 -11.68,86.39 -4.22,33.51 -5.01,71.45 -7.05,112.94 -0.09,20.78 0.32,42.48 0.48,64.96 0.2,11.24 0.41,22.67 0.62,34.28 0.78,11.41 1.58,22.99 2.39,34.73 1.51,23.49 3.29,47.6 5.57,72.2 3.39,25.72 6.6,50.26 10.66,76.07 2,12.8 3.7,25.74 6.01,38.68 2.52,12.9 5.07,25.89 7.63,38.96 2.56,13.07 5.13,26.21 7.72,39.42 l 3.93,19.84 4.76,19.76 c 6.48,26.37 12.74,53 20.33,79.4 8.14,26.25 15.71,52.72 24.4,78.86 8.73,26.13 16.99,52.35 26.55,78.06 4.36,12.96 8.77,25.9 13.58,38.71 l 6.85,19.23 1.76,4.76 2.13,4.98 4.22,9.33 c 22.78,49.33 47.76,96.61 76.67,140.36 14.51,21.83 30.54,42.44 48.69,60.92 9.04,9.26 18.86,17.75 29.05,25.7 10.59,7.47 21.43,14.59 33.24,20.1 23.63,10.93 49.31,17.2 75.85,14.38 23.96,-2.53 46.59,-9.91 66.63,-19.67 40.15,-20.27 68.4,-50.56 87.93,-79.15 19.84,-28.71 31.78,-56.42 40.09,-79.38 8.32,-23.03 12.61,-41.71 15.19,-54.46 2.39,-12.8 3.13,-19.74 3.13,-19.74 l -3.9,-0.84",
    stroke: "#8a7b9d",
  },
  {
    d: "m 5429.88,3953.7 c 32.5,72.78 40.6,159.01 38.9,237.59 -1.41,65.2 -15.4,127.75 -32.76,190.3 -15.5,55.84 -32.62,112.27 -29.26,170.86 5.25,91.48 90.77,205.74 188.97,151.63 53.64,-29.55 110.11,-112.64 73.77,-173.54 -24.17,-40.5 -113.25,-61.68 -142.84,-17.66 -10.76,16.01 -9.26,37.59 0.02,53.78 11.57,20.17 34.4,21.85 54.41,14.95 12.23,-4.22 17.44,15.1 5.32,19.28 -55.31,19.07 -103.28,-33.03 -82.34,-87.41 26.11,-67.79 131.72,-47.98 172.21,-6.62 47.12,48.14 17.83,124.27 -17.73,169.16 -41.17,51.97 -112.48,83.27 -173.93,47.51 -55.65,-32.38 -90.16,-102.88 -97.31,-164.64 -8.23,-71.16 19.04,-143.37 37.16,-210.94 32.36,-120.58 39.63,-268.85 -11.85,-384.15 -5.22,-11.67 12.02,-21.86 17.26,-10.1 v 0",
    stroke: "#8a7b9d",
  },
];

export function DrawableAnimation() {
  useEffect(() => {
    animate(svg.createDrawable(".line"), {
      draw: ["0 0", "0 1", "1 1"],
      ease: "easeInOutQuad",
      duration: 3000,
      delay: stagger(50),
      loop: true,
    });
  }, []);

  return (
    <div className="flex items-center justify-center w-full max-w-2xl p-4 mx-auto">
      <svg viewBox="0 0 1000 666.66669" className="w-full h-auto">
        <g transform="matrix(0.13333333,0,0,-0.13333333,0,666.66667)">
          {/* Layer 1: Low-opacity background track */}
          <g
            opacity="0.2"
            strokeWidth="40"
            strokeLinecap="round"
            strokeLinejoin="round"
            fill="none"
          >
            {pathsData.map((path, index) => (
              <path key={`track-${index}`} d={path.d} stroke={path.stroke} />
            ))}
          </g>

          {/* Layer 2: Animated foreground line */}
          <g
            strokeWidth="40"
            strokeLinecap="round"
            strokeLinejoin="round"
            fill="none"
          >
            {pathsData.map((path, index) => (
              <path
                key={`line-${index}`}
                className="line"
                d={path.d}
                stroke={path.stroke}
              />
            ))}
          </g>
        </g>
      </svg>
    </div>
  );
}
